# Default values for trading.
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.

minio:
  # This will set the replicaset count more information can be found here: https://kubernetes.io/docs/concepts/workloads/controllers/replicaset/
  replicas: 1

  podAnnotations: {}

  podLabels: {}

  # This is for the secretes for pulling an image from a private repository more information can be found here: https://kubernetes.io/docs/tasks/configure-pod-container/pull-image-private-registry/
  imagePullSecrets: []

  # This sets the container image more information can be found here: https://kubernetes.io/docs/concepts/containers/images/
  image:
    repository: minio/minio
    # Overrides the image tag whose default is the chart appVersion.
    tag: RELEASE.2025-07-23T15-54-02Z
    # This sets the pull policy for images.
    pullPolicy: IfNotPresent

  port: 9000

  envFrom:
    - secretRef:
        name: secret

  # Additional volumeMounts on the output Deployment definition.
  volumeMounts:
    - name: minio-data
      mountPath: /data

  # Additional volumes on the output Deployment definition.
  volumes:
    - name: minio-data
      persistentVolumeClaim:
        claimName: minio-persistent-volume-claim

  persistence:
    accessModes:
      - "ReadWriteOnce"
    size: "5Gi"

  # This is for setting up a service more information can be found here: https://kubernetes.io/docs/concepts/services-networking/service/
  service:
    # This sets the service type more information can be found here: https://kubernetes.io/docs/concepts/services-networking/service/#publishing-services-service-types
    type: ClusterIP
    # This sets the ports more information can be found here: https://kubernetes.io/docs/concepts/services-networking/service/#field-spec-ports
    port: 9000

postgresql:
  # This will set the replicaset count more information can be found here: https://kubernetes.io/docs/concepts/workloads/controllers/replicaset/
  replicas: 1

  podAnnotations: {}

  podLabels: {}

  # This is for the secretes for pulling an image from a private repository more information can be found here: https://kubernetes.io/docs/tasks/configure-pod-container/pull-image-private-registry/
  imagePullSecrets: []

  # This sets the container image more information can be found here: https://kubernetes.io/docs/concepts/containers/images/
  image:
    repository: postgres
    # Overrides the image tag whose default is the chart appVersion.
    tag: 17.6-alpine3.22
    # This sets the pull policy for images.
    pullPolicy: IfNotPresent

  port: 5432

  envFrom:
    - secretRef:
        name: secret

  # Additional volumeMounts on the output Deployment definition.
  volumeMounts:
    - name: postgresql-data
      mountPath: /var/lib/postgresql

  # Additional volumes on the output Deployment definition.
  volumes:
    - name: postgresql-data
      persistentVolumeClaim:
        claimName: postgresql-persistent-volume-claim

  persistence:
    accessModes:
      - "ReadWriteOnce"
    size: "3Gi"

  # This is for setting up a service more information can be found here: https://kubernetes.io/docs/concepts/services-networking/service/
  service:
    # This sets the service type more information can be found here: https://kubernetes.io/docs/concepts/services-networking/service/#publishing-services-service-types
    type: ClusterIP
    # This sets the ports more information can be found here: https://kubernetes.io/docs/concepts/services-networking/service/#field-spec-ports
    port: 5432

redis:
  # This will set the replicaset count more information can be found here: https://kubernetes.io/docs/concepts/workloads/controllers/replicaset/
  replicas: 1

  podAnnotations: {}

  podLabels: {}

  # This is for the secretes for pulling an image from a private repository more information can be found here: https://kubernetes.io/docs/tasks/configure-pod-container/pull-image-private-registry/
  imagePullSecrets: []

  # This sets the container image more information can be found here: https://kubernetes.io/docs/concepts/containers/images/
  image:
    repository: redis
    # Overrides the image tag whose default is the chart appVersion.
    tag: 8.2.1-alpine3.22
    # This sets the pull policy for images.
    pullPolicy: IfNotPresent

  port: 6379

  # Additional volumeMounts on the output Deployment definition.
  volumeMounts:
    - name: redis-data
      mountPath: /data

  # Additional volumes on the output Deployment definition.
  volumes:
    - name: redis-data
      persistentVolumeClaim:
        claimName: redis-persistent-volume-claim

  persistence:
    accessModes:
      - "ReadWriteOnce"
    size: "1Gi"

  # This is for setting up a service more information can be found here: https://kubernetes.io/docs/concepts/services-networking/service/
  service:
    # This sets the service type more information can be found here: https://kubernetes.io/docs/concepts/services-networking/service/#publishing-services-service-types
    type: ClusterIP
    # This sets the ports more information can be found here: https://kubernetes.io/docs/concepts/services-networking/service/#field-spec-ports
    port: 6379

phoenix:
  # This will set the replicaset count more information can be found here: https://kubernetes.io/docs/concepts/workloads/controllers/replicaset/
  replicas: 1

  podAnnotations:
    updatedTimestamp: "2025-01-01T00:00:00Z"

  podLabels: {}

  # This is for the secretes for pulling an image from a private repository more information can be found here: https://kubernetes.io/docs/tasks/configure-pod-container/pull-image-private-registry/
  imagePullSecrets: []

  # This sets the container image more information can be found here: https://kubernetes.io/docs/concepts/containers/images/
  image:
    repository: harbor.joshchu.xyz/trading/phoenix
    # Overrides the image tag whose default is the chart appVersion.
    tag: latest
    # This sets the pull policy for images.
    pullPolicy: IfNotPresent

  port: 8080

  # This is to setup the liveness and readiness probes more information can be found here: https://kubernetes.io/docs/tasks/configure-pod-container/configure-liveness-readiness-startup-probes/
  livenessProbe:
    httpGet:
      path: /
      port: http
  readinessProbe:
    httpGet:
      path: /
      port: http

  resources:
    {}
    # We usually recommend not to specify default resources and to leave this as a conscious
    # choice for the user. This also increases chances charts run on environments with little
    # resources, such as Minikube. If you do want to specify resources, uncomment the following
    # lines, adjust them as necessary, and remove the curly braces after 'resources:'.
    # limits:
    #   cpu: 100m
    #   memory: 128Mi
    # requests:
    #   cpu: 100m
    #   memory: 128Mi

  # Additional volumeMounts on the output Deployment definition.
  volumeMounts:
    - name: config
      mountPath: "/etc/trading"

  # Additional volumes on the output Deployment definition.
  volumes:
    - name: config
      configMap:
        name: config-map

  #This section builds out the service account more information can be found here: https://kubernetes.io/docs/concepts/security/service-accounts/
  serviceAccount:
    # Specifies whether a service account should be created
    create: true
    # Automatically mount a ServiceAccount's API credentials?
    automount: true
    # Annotations to add to the service account
    annotations: {}

  # This is for setting up a service more information can be found here: https://kubernetes.io/docs/concepts/services-networking/service/
  service:
    # This sets the service type more information can be found here: https://kubernetes.io/docs/concepts/services-networking/service/#publishing-services-service-types
    type: ClusterIP
    # This sets the ports more information can be found here: https://kubernetes.io/docs/concepts/services-networking/service/#field-spec-ports
    port: 8080

  httpRoute:
    parentRefs:
      - name: gateway
        namespace: gateway
    hostnames:
      - "phoenix-trading-dev-1.joshchu.xyz"

milwaukee:
  # This will set the replicaset count more information can be found here: https://kubernetes.io/docs/concepts/workloads/controllers/replicaset/
  replicas: 1

  podAnnotations:
    updatedTimestamp: "2025-01-01T00:00:00Z"

  podLabels: {}

  # This is for the secretes for pulling an image from a private repository more information can be found here: https://kubernetes.io/docs/tasks/configure-pod-container/pull-image-private-registry/
  imagePullSecrets: []

  # This sets the container image more information can be found here: https://kubernetes.io/docs/concepts/containers/images/
  image:
    repository: harbor.joshchu.xyz/trading/milwaukee
    # Overrides the image tag whose default is the chart appVersion.
    tag: latest
    # This sets the pull policy for images.
    pullPolicy: IfNotPresent

  resources:
    {}
    # We usually recommend not to specify default resources and to leave this as a conscious
    # choice for the user. This also increases chances charts run on environments with little
    # resources, such as Minikube. If you do want to specify resources, uncomment the following
    # lines, adjust them as necessary, and remove the curly braces after 'resources:'.
    # limits:
    #   cpu: 100m
    #   memory: 128Mi
    # requests:
    #   cpu: 100m
    #   memory: 128Mi

  # Additional volumeMounts on the output Deployment definition.
  volumeMounts:
    - name: config
      mountPath: "/etc/trading"

  # Additional volumes on the output Deployment definition.
  volumes:
    - name: config
      configMap:
        name: config-map

  #This section builds out the service account more information can be found here: https://kubernetes.io/docs/concepts/security/service-accounts/
  serviceAccount:
    # Specifies whether a service account should be created
    create: true
    # Automatically mount a ServiceAccount's API credentials?
    automount: true
    # Annotations to add to the service account
    annotations: {}

anaheim:
  # This will set the replicaset count more information can be found here: https://kubernetes.io/docs/concepts/workloads/controllers/replicaset/
  replicas: 1

  podAnnotations:
    updatedTimestamp: "2025-01-01T00:00:00Z"

  podLabels: {}

  # This is for the secretes for pulling an image from a private repository more information can be found here: https://kubernetes.io/docs/tasks/configure-pod-container/pull-image-private-registry/
  imagePullSecrets: []

  # This sets the container image more information can be found here: https://kubernetes.io/docs/concepts/containers/images/
  image:
    repository: harbor.joshchu.xyz/trading/anaheim
    # Overrides the image tag whose default is the chart appVersion.
    tag: latest
    # This sets the pull policy for images.
    pullPolicy: IfNotPresent

  port: 8081

  # This is to setup the liveness and readiness probes more information can be found here: https://kubernetes.io/docs/tasks/configure-pod-container/configure-liveness-readiness-startup-probes/
  livenessProbe:
    httpGet:
      path: /
      port: http
  readinessProbe:
    httpGet:
      path: /
      port: http

  resources:
    {}
    # We usually recommend not to specify default resources and to leave this as a conscious
    # choice for the user. This also increases chances charts run on environments with little
    # resources, such as Minikube. If you do want to specify resources, uncomment the following
    # lines, adjust them as necessary, and remove the curly braces after 'resources:'.
    # limits:
    #   cpu: 100m
    #   memory: 128Mi
    # requests:
    #   cpu: 100m
    #   memory: 128Mi

  # Additional volumeMounts on the output Deployment definition.
  volumeMounts:
    - name: config
      mountPath: "/etc/trading"

  # Additional volumes on the output Deployment definition.
  volumes:
    - name: config
      configMap:
        name: config-map

  #This section builds out the service account more information can be found here: https://kubernetes.io/docs/concepts/security/service-accounts/
  serviceAccount:
    # Specifies whether a service account should be created
    create: true
    # Automatically mount a ServiceAccount's API credentials?
    automount: true
    # Annotations to add to the service account
    annotations: {}

  # This is for setting up a service more information can be found here: https://kubernetes.io/docs/concepts/services-networking/service/
  service:
    # This sets the service type more information can be found here: https://kubernetes.io/docs/concepts/services-networking/service/#publishing-services-service-types
    type: ClusterIP
    # This sets the ports more information can be found here: https://kubernetes.io/docs/concepts/services-networking/service/#field-spec-ports
    port: 8081

  httpRoute:
    parentRefs:
      - name: gateway
        namespace: gateway
    hostnames:
      - "anaheim-trading-dev-1.joshchu.xyz"
